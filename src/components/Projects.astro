---
import { ExternalLink, Github, Eye } from 'lucide-react';
import { Image } from 'astro:assets';
import haulotteLogo from '../assets/haulotte-logo.jpg';
import pellencLogo from '../assets/pellenc-logo.png';

// Donn√©es des projets (√† personnaliser)
const projects = [
  {
    id: 1,
    title: "Haulotte",
    description: "Plateforme Sylius e-commerce multinationale compl√®te avec gestion des stocks, paiements int√©gr√©s et dashboard administrateur.",
    image: haulotteLogo,
    technologies: ["Sylius", "Symfony", "MariaDB"],
    githubUrl: null,
    liveUrl: "https://www.haulotte.fr/fr_FR/",
    inCompany: true
  },
  {
    id: 2,
    title: "Pellenc Store Allemagne",
    description: "Plateforme Sylius e-commerce compl√®te avec gestion des stocks, paiements int√©gr√©s et dashboard administrateur.",
    image: pellencLogo,
    technologies: ["Sylius", "Symfony", "MariaDB"],
    githubUrl: null,
    liveUrl: "https://shop.pellenc.com/de_DE/",
    inCompany: true
  },
  {
    id: 3,
    title: "Blog Multilingue Symfony",
    description: "Blog moderne et multilingue d√©velopp√© avec Symfony 7+, supportant le fran√ßais, l'anglais et l'espagnol. Interface d'administration EasyAdmin, syst√®me de traductions personnalis√© et URLs SEO-friendly.",
    technologies: ["Symfony 7+", "EasyAdmin", "PostgreSQL", "Docker", "Twig", "Doctrine ORM"],
    githubUrl: "https://github.com/Arnaudgouel/blog-multilingue-symfony",
    liveUrl: null,
    inCompany: false
  },
  {
    id: 4,
    title: "G√©n√©rateur de mot de passe",
    description: "G√©n√©rateur de mot de passe avec g√©n√©ration de mot de passe al√©atoire et possibilit√© de choisir la longueur du mot de passe.",
    technologies: ["Rust"],
    githubUrl: "https://github.com/Arnaudgouel/rust-partiel",
    liveUrl: null,
    inCompany: false
  },
  {
    id: 5,
    title: "Application Interne Epalia",
    description: "Application interne qui permet de g√©rer la saise de production de l'entreprise Epalia, de g√©rer les travailleurs temporaires, moteur de calcul de prime, Mini streaming ETL des donn√©es de production.",
    technologies: ["Symfony", "Golang", "Next.js", "PostgreSQL", "Docker"],
    githubUrl: null,
    liveUrl: null,
    inCompany: true
  }
];
---

<section id="projets" class="section-padding bg-slate-900/50">
  <div class="container-custom">
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold mb-6">
        Mes <span class="gradient-text">Projets</span>
      </h2>
      <p class="text-xl text-slate-400 max-w-2xl mx-auto">
        D√©couvrez une s√©lection de mes r√©alisations les plus r√©centes et significatives.
      </p>
    </div>
    
    <!-- Filter Tabs -->
    <div class="flex justify-center mb-12">
      <div class="flex bg-slate-800/50 rounded-full p-1 backdrop-blur-sm">
        <button class="filter-btn active" data-filter="all">
          Tous les projets
        </button>
        <button class="filter-btn" data-filter="company">
          Dans une entreprise
        </button>
      </div>
    </div>
    
    <!-- Projects Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="projects-grid">
      {projects.map((project, index) => (
        <div 
          class={`project-card animate-fade-in-up opacity-0 ${project.inCompany ? 'company' : 'personal'}`}
          style={`animation-delay: ${index * 100}ms;`}
          data-category={project.inCompany ? 'company' : 'personal'}
        >
          <div class="bg-slate-800/50 rounded-2xl overflow-hidden card-hover group h-full">
            <!-- Project Image -->
            <div class="relative overflow-hidden aspect-video bg-slate-700">
              <!-- Placeholder for project image -->
              <div class="w-full h-full bg-gradient-to-br from-blue-500/20 via-purple-500/20 to-pink-500/20 flex items-center justify-center">
              {project.image ? (
                <Image src={project.image} alt={project.title} class="w-full h-full object-center object-cover" width={500} height={500} />
              ) : (
                <div class="w-full h-full flex items-center justify-center">
                  <div class="text-6xl opacity-50">üöÄ</div>
                </div>
              )}
              </div>
              
              <!-- Overlay with actions -->
              <div class="absolute inset-0 bg-slate-900/80 opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-center justify-center space-x-4">
                {project.liveUrl && (
                <a 
                  href={project.liveUrl} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="p-3 bg-blue-600 rounded-full hover:bg-blue-700 transition-colors duration-300 group"
                  aria-label="Voir le projet live"
                >
                  <Eye className="w-5 h-5 text-white" />
                </a>
                )}
                {project.githubUrl && (
                <a 
                  href={project.githubUrl} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="p-3 bg-slate-700 rounded-full hover:bg-slate-600 transition-colors duration-300"
                  aria-label="Voir le code source"
                >
                  <Github className="w-5 h-5 text-white" />
                </a>
                )}
              </div>
              
              {project.inCompany && (
                <div class="absolute top-4 left-4">
                  <span class="bg-gradient-to-r from-blue-600 to-purple-600 text-white text-xs font-medium px-3 py-1 rounded-full">
                    En entreprise
                  </span>
                </div>
              )}
            </div>
            
            <!-- Project Content -->
            <div class="p-6">
              <h3 class="text-xl font-semibold text-white mb-3 group-hover:text-blue-400 transition-colors duration-300">
                {project.title}
              </h3>
              
              <p class="text-slate-300 text-sm leading-relaxed mb-4">
                {project.description}
              </p>
              
              <!-- Technologies -->
              <div class="flex flex-wrap gap-2 mb-4">
                {project.technologies.map((tech) => (
                  <span class="text-xs bg-slate-700/50 text-slate-300 px-2 py-1 rounded-md">
                    {tech}
                  </span>
                ))}
              </div>
              
              <!-- Links -->
              <div class="flex space-x-3">
                {project.liveUrl && (
                <a 
                  href={project.liveUrl} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="flex items-center gap-2 text-blue-400 hover:text-blue-300 transition-colors duration-300 text-sm font-medium"
                >
                  <ExternalLink className="w-4 h-4" />
                  Demo
                </a>
                )}
                {project.githubUrl && (
                <a 
                  href={project.githubUrl} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="flex items-center gap-2 text-slate-400 hover:text-slate-300 transition-colors duration-300 text-sm font-medium"
                >
                  <Github className="w-4 h-4" />
                  Code
                </a>
                )}
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
    
  </div>
</section>

<style>
  .filter-btn {
    @apply px-6 py-2 rounded-full text-sm font-medium transition-all duration-300 text-slate-400 hover:text-white;
  }
  
  .filter-btn.active {
    @apply bg-gradient-to-r from-blue-600 to-purple-600 text-white shadow-lg;
  }
  
  .project-card {
    @apply transition-all duration-300;
  }
  
  .project-card.hidden {
    @apply opacity-0 pointer-events-none scale-95;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Filter functionality
    const filterButtons = document.querySelectorAll('.filter-btn');
    const projectCards = document.querySelectorAll('.project-card');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        const filter = (button as HTMLElement).dataset.filter;
        
        // Update active button
        filterButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');
        
        // Filter projects
        projectCards.forEach((card, index) => {
          const categories = (card as HTMLElement).dataset.category?.split(' ') || [];
          const shouldShow = filter === 'all' || categories.includes(filter || '');
          
          if (shouldShow) {
            card.classList.remove('hidden');
            (card as HTMLElement).style.animationDelay = `${index * 100}ms`;
          } else {
            card.classList.add('hidden');
          }
        });
      });
    });
    
    // Intersection Observer for animations
    const observerOptions = {
      threshold: 0.1,
      rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.remove('opacity-0');
        }
      });
    }, observerOptions);
    
    // Observe project cards
    projectCards.forEach(card => {
      observer.observe(card);
    });
  });
</script> 